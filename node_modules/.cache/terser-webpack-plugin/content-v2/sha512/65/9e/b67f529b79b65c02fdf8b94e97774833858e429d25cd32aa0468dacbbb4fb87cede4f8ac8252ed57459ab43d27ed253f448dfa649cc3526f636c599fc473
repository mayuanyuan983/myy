{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{325:function(e,t,v){\"use strict\";v.r(t);var _=v(3),s=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[v(\"h1\",{attrs:{id:\"分支管理\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分支管理\"}},[e._v(\"#\")]),e._v(\" 分支管理\")]),e._v(\" \"),v(\"h2\",{attrs:{id:\"_1-创建分支dev\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-创建分支dev\"}},[e._v(\"#\")]),e._v(\" 1.创建分支dev\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git checkout -b dev\")])]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git checkout\")]),e._v(\"命令加上\"),v(\"code\",[e._v(\"-b\")]),e._v(\"参数表示创建并切换，相当于以下两条命令：\")]),e._v(\" \"),v(\"div\",{staticClass:\"language- line-numbers-mode\"},[v(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[v(\"code\",[e._v(\"$ git branch dev\\n$ git checkout dev\\nSwitched to branch 'dev'\\n\")])]),e._v(\" \"),v(\"div\",{staticClass:\"line-numbers-wrapper\"},[v(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),v(\"br\")])]),v(\"h2\",{attrs:{id:\"_2-查看分支\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-查看分支\"}},[e._v(\"#\")]),e._v(\" 2.查看分支\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git branch\")]),e._v(\"查看当前分支\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git branch\")]),e._v(\"命令会列出所有分支，当前分支前面会标一个\"),v(\"code\",[e._v(\"*\")]),e._v(\"号。\")]),e._v(\" \"),v(\"p\",[e._v(\"然后，我们就可以在\"),v(\"code\",[e._v(\"dev\")]),e._v(\"分支上正常提交\")]),e._v(\" \"),v(\"p\",[e._v(\"完成后切换分支\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git checkout master\")])]),e._v(\" \"),v(\"p\",[e._v(\"合并分支\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git merge\")]),e._v(\"命令用于合并指定分支到当前分支。合并后，再查看\"),v(\"code\",[e._v(\"readme.txt\")]),e._v(\"的内容，就可以看到，和\"),v(\"code\",[e._v(\"dev\")]),e._v(\"分支的最新提交是完全一样的。\")]),e._v(\" \"),v(\"div\",{staticClass:\"language-cmd line-numbers-mode\"},[v(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[v(\"code\",[e._v(\"$ git merge dev\\nUpdating d67e632..04dba94\\nFast-forward\\n README.md | 4 +++-\\n 1 file changed, 3 insertions(+), 1 deletion(-)\\n\")])]),e._v(\" \"),v(\"div\",{staticClass:\"line-numbers-wrapper\"},[v(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),v(\"br\")])]),v(\"p\",[e._v(\"注意到上面的\"),v(\"code\",[e._v(\"Fast-forward\")]),e._v(\"信息，Git告诉我们，这次合并是“快进模式”，也就是直接把\"),v(\"code\",[e._v(\"master\")]),e._v(\"指向\"),v(\"code\",[e._v(\"dev\")]),e._v(\"的当前提交，所以合并速度非常快。\")]),e._v(\" \"),v(\"p\",[e._v(\"当然，也不是每次合并都能\"),v(\"code\",[e._v(\"Fast-forward\")]),e._v(\"，我们后面会讲其他方式的合并。\")]),e._v(\" \"),v(\"p\",[e._v(\"合并完成后，就可以放心地删除\"),v(\"code\",[e._v(\"dev\")]),e._v(\"分支了：\")]),e._v(\" \"),v(\"h2\",{attrs:{id:\"_3-删除分支\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-删除分支\"}},[e._v(\"#\")]),e._v(\" 3.删除分支\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git branch -d dev\")])]),e._v(\" \"),v(\"div\",{staticClass:\"custom-block tip\"},[v(\"p\",{staticClass:\"custom-block-title\"},[e._v(\"TIP\")]),e._v(\" \"),v(\"p\",[e._v(\"Git鼓励你使用分支完成某个任务，合并后再删掉分支，这和直接在\"),v(\"code\",[e._v(\"master\")]),e._v(\"分支上工作效果是一样的，但过程更安全。\")])]),e._v(\" \"),v(\"h2\",{attrs:{id:\"_4-切换分支\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-切换分支\"}},[e._v(\"#\")]),e._v(\" 4.切换分支\")]),e._v(\" \"),v(\"p\",[e._v(\"切换分支使用\"),v(\"code\",[e._v(\"git checkout <branch>\")])]),e._v(\" \"),v(\"p\",[e._v(\"撤销修改使用\"),v(\"code\",[e._v(\"git checkout -- <file>\")])]),e._v(\" \"),v(\"p\",[e._v(\"过于相似\")]),e._v(\" \"),v(\"p\",[e._v(\"目前，切换分支，我们使用\"),v(\"code\",[e._v(\"git switch\")]),e._v(\"命令\")]),e._v(\" \"),v(\"p\",[e._v(\"创建并切换到新的dev分支\"),v(\"code\",[e._v(\"git switch -c dev\")])]),e._v(\" \"),v(\"p\",[e._v(\"直接切换到已有的master分支\"),v(\"code\",[e._v(\"git switch master\")])]),e._v(\" \"),v(\"div\",{staticClass:\"custom-block tip\"},[v(\"p\",{staticClass:\"custom-block-title\"},[e._v(\"小结\")]),e._v(\" \"),v(\"p\",[e._v(\"查看分支：\"),v(\"code\",[e._v(\"git branch\")])]),e._v(\" \"),v(\"p\",[e._v(\"创建分支：\"),v(\"code\",[e._v(\"git branch <name>\")])]),e._v(\" \"),v(\"p\",[e._v(\"切换分支：\"),v(\"code\",[e._v(\"git checkout <name>\")]),e._v(\"或者\"),v(\"code\",[e._v(\"git switch <name>\")])]),e._v(\" \"),v(\"p\",[e._v(\"创建+切换分支：\"),v(\"code\",[e._v(\"git checkout -b <name>\")]),e._v(\"或者\"),v(\"code\",[e._v(\"git switch -c <name>\")])]),e._v(\" \"),v(\"p\",[e._v(\"合并某分支到当前分支：\"),v(\"code\",[e._v(\"git merge <name>\")])]),e._v(\" \"),v(\"p\",[e._v(\"删除分支：\"),v(\"code\",[e._v(\"git branch -d <name>\")])])]),e._v(\" \"),v(\"h2\",{attrs:{id:\"_5-解决冲突\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-解决冲突\"}},[e._v(\"#\")]),e._v(\" 5.解决冲突\")]),e._v(\" \"),v(\"p\",[e._v(\"创建分支feature1\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git switch -c feature1\")])]),e._v(\" \"),v(\"p\",[e._v(\"修改文件后提交\")]),e._v(\" \"),v(\"p\",[e._v(\"切换回master分支\")]),e._v(\" \"),v(\"p\",[e._v(\"修改文件后提交\")]),e._v(\" \"),v(\"p\",[e._v(\"合并\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git merge feature1\")])]),e._v(\" \"),v(\"p\",[e._v(\"存在冲突\")]),e._v(\" \"),v(\"div\",{staticClass:\"language- line-numbers-mode\"},[v(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[v(\"code\",[e._v(\"$ git merge feature1\\nAuto-merging readme.txt\\nCONFLICT (content): Merge conflict in readme.txt\\nAutomatic merge failed; fix conflicts and then commit the result.\\n\")])]),e._v(\" \"),v(\"div\",{staticClass:\"line-numbers-wrapper\"},[v(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),v(\"br\")])]),v(\"p\",[e._v(\"Git用\"),v(\"code\",[e._v(\"<<<<<<<\")]),e._v(\"，\"),v(\"code\",[e._v(\"=======\")]),e._v(\"，\"),v(\"code\",[e._v(\">>>>>>>\")]),e._v(\"标记出不同分支的内容，修改冲突的文件后保存，再次添加到暂存区，再提交。\")]),e._v(\" \"),v(\"p\",[e._v(\"查看分支合并情况\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git log --graph --pretty=oneline --abbrev-commit\")])]),e._v(\" \"),v(\"p\",[e._v(\"删除feature1分支\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git branch -d feature1\")])]),e._v(\" \"),v(\"p\",[e._v(\"查看分支合并图\"),v(\"code\",[e._v(\"git log --graph\")])]),e._v(\" \"),v(\"h2\",{attrs:{id:\"_6-分支管理策略\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-分支管理策略\"}},[e._v(\"#\")]),e._v(\" 6.分支管理策略\")]),e._v(\" \"),v(\"p\",[e._v(\"合并分支的模式\")]),e._v(\" \"),v(\"p\",[e._v(\"合并分支时，Git会使用\"),v(\"code\",[e._v(\"Fast forward\")]),e._v(\"模式：这种模式下，删除分支后，会丢掉分支信息\")]),e._v(\" \"),v(\"p\",[e._v(\"如果禁用此模式，Git会在merge时生成一个新的commit，可以从\"),v(\"code\",[e._v(\"git log\")]),e._v(\"中看到分支信息\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"--no-ff\")]),e._v(\"方式的\"),v(\"code\",[e._v(\"git merge\")])]),e._v(\" \"),v(\"p\",[e._v(\"创建并切换分支\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git switch -c dev\")])]),e._v(\" \"),v(\"p\",[e._v(\"提交文件\")]),e._v(\" \"),v(\"p\",[e._v(\"切换分支master\")]),e._v(\" \"),v(\"p\",[e._v(\"合并禁用Fast forward\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v('git merge --no-ff -m \"merge with no-ff\" dev')])]),e._v(\" \"),v(\"p\",[e._v(\"因为本次合并要创建一个新的commit，所以加上\"),v(\"code\",[e._v(\"-m\")]),e._v(\"参数，把commit描述写进去。\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git log\")]),e._v(\"查看分支历史\")]),e._v(\" \"),v(\"div\",{staticClass:\"custom-block tip\"},[v(\"p\",{staticClass:\"custom-block-title\"},[e._v(\"分支策略\")]),e._v(\" \"),v(\"p\",[e._v(\"在实际开发中，我们应该按照几个基本原则进行分支管理：\")]),e._v(\" \"),v(\"p\",[e._v(\"首先，\"),v(\"code\",[e._v(\"master\")]),e._v(\"分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；\")]),e._v(\" \"),v(\"p\",[e._v(\"那在哪干活呢？干活都在\"),v(\"code\",[e._v(\"dev\")]),e._v(\"分支上，也就是说，\"),v(\"code\",[e._v(\"dev\")]),e._v(\"分支是不稳定的，到某个时候，比如1.0版本发布时，再把\"),v(\"code\",[e._v(\"dev\")]),e._v(\"分支合并到\"),v(\"code\",[e._v(\"master\")]),e._v(\"上，在\"),v(\"code\",[e._v(\"master\")]),e._v(\"分支发布1.0版本；\")]),e._v(\" \"),v(\"p\",[e._v(\"你和你的小伙伴们每个人都在\"),v(\"code\",[e._v(\"dev\")]),e._v(\"分支上干活，每个人都有自己的分支，时不时地往\"),v(\"code\",[e._v(\"dev\")]),e._v(\"分支上合并就可以了。\")]),e._v(\" \"),v(\"p\",[e._v(\"Git分支十分强大，在团队开发中应该充分应用。\")]),e._v(\" \"),v(\"p\",[e._v(\"合并分支时，加上\"),v(\"code\",[e._v(\"--no-ff\")]),e._v(\"参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而\"),v(\"code\",[e._v(\"fast forward\")]),e._v(\"合并就看不出来曾经做过合并。\")])]),e._v(\" \"),v(\"h2\",{attrs:{id:\"_7-bug分支\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7-bug分支\"}},[e._v(\"#\")]),e._v(\" 7.BUG分支\")]),e._v(\" \"),v(\"p\",[v(\"a\",{attrs:{href:\"https://www.liaoxuefeng.com/wiki/896043488029600/900388704535136\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"教程\"),v(\"OutboundLink\")],1)]),e._v(\" \"),v(\"p\",[e._v(\"当目前有未提交的工作，但又不想提交，并且还有紧急BUG要改。\")]),e._v(\" \"),v(\"p\",[e._v(\"可以使用\"),v(\"code\",[e._v(\"git stash\")]),e._v(\"保存当前工作现场\")]),e._v(\" \"),v(\"div\",{staticClass:\"language- line-numbers-mode\"},[v(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[v(\"code\",[e._v(\"$ git stash\\nSaved working directory and index state WIP on dev: d67e632 Initial commit\\n\")])]),e._v(\" \"),v(\"div\",{staticClass:\"line-numbers-wrapper\"},[v(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),v(\"br\")])]),v(\"p\",[e._v(\"此时暂存区就是干净的了\")]),e._v(\" \"),v(\"p\",[e._v(\"此时看需要在哪个分支修改BUG\")]),e._v(\" \"),v(\"p\",[e._v(\"如果在master修改\")]),e._v(\" \"),v(\"div\",{staticClass:\"language-cmd line-numbers-mode\"},[v(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[v(\"code\",[e._v('$ git checkout master\\n$ git checkout -b issue-101\\n#修改BUG完成后，提交\\n$ git add\\n$ git commit -m \"改BUG\"\\n#合并分支\\n$ git switch master\\n$ git merge --no-ff -m \"merged bug fix 101\" issue-101\\n#删除分支\\n$ git branch -d issue-101\\n#还原工作现场\\n$ git switch dev\\n$ git stash list\\n')])]),e._v(\" \"),v(\"div\",{staticClass:\"line-numbers-wrapper\"},[v(\"span\",{staticClass:\"line-number\"},[e._v(\"1\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"2\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"3\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"4\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"5\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"6\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"7\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"8\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"9\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"10\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"11\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"12\")]),v(\"br\"),v(\"span\",{staticClass:\"line-number\"},[e._v(\"13\")]),v(\"br\")])]),v(\"p\",[e._v(\"恢复现场的两种方式\")]),e._v(\" \"),v(\"p\",[e._v(\"1.\"),v(\"code\",[e._v(\"git stash apply\")]),e._v(\"恢复后，stash内容不删除，需要用git stash drop删除\")]),e._v(\" \"),v(\"p\",[e._v(\"2.\"),v(\"code\",[e._v(\"git stash pop\")]),e._v(\"恢复的同时删除stash\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git stash list\")]),e._v(\" 查看stash\")]),e._v(\" \"),v(\"p\",[e._v(\"可以多次stash，恢复的时候先使用\"),v(\"code\",[e._v(\"git stash list\")]),e._v(\"查看stash\")]),e._v(\" \"),v(\"p\",[e._v(\"恢复指定的stash：\"),v(\"code\",[e._v(\"git stash apply stash@{0}\")])]),e._v(\" \"),v(\"p\",[e._v(\"回到dev分支后，如果想在dev修复刚才的BUG\")]),e._v(\" \"),v(\"p\",[e._v(\"只需要把修改bug的提交所做的修改“复制”到dev分支。注意：我们只想复制这个提交所做的修改，并不是把整个master分支merge过来。\")]),e._v(\" \"),v(\"p\",[e._v(\"为了方便操作，Git专门提供了一个\"),v(\"code\",[e._v(\"cherry-pick\")]),e._v(\"命令，让我们能复制一个特定的提交到当前分支\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git cherry-pick <commit>\")])]),e._v(\" \"),v(\"h2\",{attrs:{id:\"_8-feature分支\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_8-feature分支\"}},[e._v(\"#\")]),e._v(\" 8.Feature分支\")]),e._v(\" \"),v(\"p\",[e._v(\"开发新功能时，最好新建一个feature分支开发，完成后合并，删除分支\")]),e._v(\" \"),v(\"p\",[e._v(\"如果不想要这个分支，并且没有合并\")]),e._v(\" \"),v(\"p\",[e._v(\"强制删除\"),v(\"code\",[e._v(\"git branch -D <name>\")])]),e._v(\" \"),v(\"h2\",{attrs:{id:\"_9-多人协作\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_9-多人协作\"}},[e._v(\"#\")]),e._v(\" 9.多人协作\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git remote\")]),e._v(\"查看远程库的信息\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git remote -v\")]),e._v(\"查看远程库的详细信息\")]),e._v(\" \"),v(\"img\",{staticStyle:{zoom:\"60%\"},attrs:{src:e.$withBase(\"/img/image-20200903200313180.png\"),alt:\"dock\"}}),e._v(\" \"),v(\"p\",[e._v(\"上面显示了可以抓取和推送的origin的地址，如果没有推送权限则看不到push的地址\")]),e._v(\" \"),v(\"p\",[e._v(\"推送分支：将该分支的所有本地提交推送到远程仓库\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git push origin master\")])]),e._v(\" \"),v(\"p\",[e._v(\"推送到其他分支\")]),e._v(\" \"),v(\"p\",[v(\"code\",[e._v(\"git push origin dev\")])]),e._v(\" \"),v(\"div\",{staticClass:\"custom-block tip\"},[v(\"p\",{staticClass:\"custom-block-title\"},[e._v(\"TIP\")]),e._v(\" \"),v(\"ul\",[v(\"li\",[v(\"code\",[e._v(\"master\")]),e._v(\"分支是主分支，因此要时刻与远程同步；\")]),e._v(\" \"),v(\"li\",[v(\"code\",[e._v(\"dev\")]),e._v(\"分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；\")]),e._v(\" \"),v(\"li\",[e._v(\"bug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug；\")]),e._v(\" \"),v(\"li\",[e._v(\"feature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。\")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);","extractedComments":[]}