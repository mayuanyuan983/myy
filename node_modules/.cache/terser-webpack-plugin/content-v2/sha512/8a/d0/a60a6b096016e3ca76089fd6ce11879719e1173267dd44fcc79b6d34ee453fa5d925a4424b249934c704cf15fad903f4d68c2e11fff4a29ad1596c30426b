{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{534:function(o,t,_){\"use strict\";_.r(t);var e=_(23),v=Object(e.a)({},(function(){var o=this,t=o.$createElement,_=o._self._c||t;return _(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":o.$parent.slotKey}},[_(\"h1\",{attrs:{id:\"localhost-和-0-0-0-0区别\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#localhost-和-0-0-0-0区别\"}},[o._v(\"#\")]),o._v(\" localhost 和 0.0.0.0区别\")]),o._v(\" \"),_(\"p\",[o._v(\"指定使用一个 host，默认是 \"),_(\"code\",[o._v(\"localhost\")]),o._v(\"，如果你希望服务器外部可访问，制定如下:\")]),o._v(\" \"),_(\"p\",[o._v('host: \"0.0.0.0\"')]),o._v(\" \"),_(\"p\",[o._v(\"每个主机都可能有多个 ip 地址，比如多个网卡或多 ip，\"),_(\"code\",[o._v(\"127.0.0.1\")]),o._v(\" 是本地环回地址(指不离开主机的数据包,也就是说，这些数据包\"),_(\"a\",{attrs:{href:\"https://www.baike.com/wiki/%E4%B8%8D%E4%BC%9A/?from=wiki_content&prd=innerlink\",target:\"_blank\",rel:\"noopener noreferrer\"}},[o._v(\"不会\"),_(\"OutboundLink\")],1),o._v(\"通过外部网络接口)，专供自己访问自己，速度快(不用经过整个协议栈)，\"),_(\"strong\",[o._v(\"永远都不能出现在主机外部的网络中\")]),o._v(\"，所以只适合用在开发环境。\")]),o._v(\" \"),_(\"blockquote\",[_(\"p\",[_(\"code\",[o._v(\"localhost\")]),o._v(\" 只是 \"),_(\"code\",[o._v(\"127.0.0.1\")]),o._v(\" 的别名\")])]),o._v(\" \"),_(\"p\",[_(\"code\",[o._v(\"0.0.0.0\")]),o._v(\" 有几个不同的含义，不过当告诉服务器监听了 \"),_(\"code\",[o._v(\"0.0.0.0\")]),o._v(\"，意味着\"),_(\"strong\",[o._v(\"监听每一个可用的网络接口\")]),o._v(\"，从服务器进程的角度来看，IP 地址为 \"),_(\"code\",[o._v(\"127.0.0.1\")]),o._v(\" 的环回适配器看起来就像机器上的任何其他网络适配器一样，因此被告知监听 \"),_(\"code\",[o._v(\"0.0.0.0\")]),o._v(\" 的服务器也将接受该接口上的连接。\")]),o._v(\" \"),_(\"p\",[o._v(\"因此在实际应用中，一般我们在服务端绑定端口的时候可以选择绑定到 \"),_(\"code\",[o._v(\"0.0.0.0\")]),o._v(\"，这样我的服务访问就可以通过主机的多个 ip 地址访问我的服务。\")]),o._v(\" \"),_(\"blockquote\",[_(\"p\",[o._v(\"比如我有一台服务器，一个外网地址 A，一个内网地址 B，如果我绑定的端口指定了 0.0.0.0，那么通过内网地址或外网地址都可以访问应用\")])])])}),[],!1,null,null,null);t.default=v.exports}}]);","extractedComments":[]}