{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{321:function(t,s,a){\"use strict\";a.r(s);var e=a(3),_=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"git\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git\"}},[t._v(\"#\")]),t._v(\" Git\")]),t._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"什么是Git\")]),t._v(\" \"),a(\"p\",[t._v(\"Git是目前世界上最先进的分布式版本控制系统\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_1-如何安装git\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-如何安装git\"}},[t._v(\"#\")]),t._v(\" 1.如何安装Git？\")]),t._v(\" \"),a(\"p\",[a(\"RouterLink\",{attrs:{to:\"/page/install/notes/3.html#git安装教程\"}},[t._v(\"安装文档\")])],1),t._v(\" \"),a(\"h2\",{attrs:{id:\"_2-创建项目\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-创建项目\"}},[t._v(\"#\")]),t._v(\" 2.创建项目\")]),t._v(\" \"),a(\"p\",[t._v(\"右键打开Git Bash窗口\")]),t._v(\" \"),a(\"p\",[t._v(\"新建文件夹\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-cmd line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"mkdir learngit\\ncd learngit\\n#查看目录\\npwd\\n#建立仓库\\ngit init\\n#查看隐藏目录\\nls -ah\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\")])]),a(\"p\",[t._v(\"编写一个文件 readme.txt\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-cmd line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('#将文件添加到仓库\\ngit add \\n#将文件提交到仓库\\ngit commit -m \"这是提交的说明文字\"\\n')])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])]),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"提示\")]),t._v(\" \"),a(\"p\",[t._v(\"添加文件时，文件必须在当前目录下存在，使用ls或者dir查看当前目录的文件\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_3-查看状态\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-查看状态\"}},[t._v(\"#\")]),t._v(\" 3.查看状态\")]),t._v(\" \"),a(\"p\",[t._v(\"我们对readme.txt进行修改\")]),t._v(\" \"),a(\"p\",[t._v(\"运行\"),a(\"code\",[t._v(\"git status\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-cmd line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v('$ git status\\nOn branch master\\nChanges not staged for commit:\\n  (use \"git add <file>...\" to update what will be committed)\\n  (use \"git restore <file>...\" to discard changes in working directory)\\n        modified:   readme.txt\\n\\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\\n')])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\")])]),a(\"p\",[t._v(\"此命令可以让我们掌握仓库当前的状态，可以看出，readme.tex被修改了，但是还没有提交\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_4-对比修改\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-对比修改\"}},[t._v(\"#\")]),t._v(\" 4.对比修改\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"git diff\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-cmd line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"$ git diff readme.txt\\ndiff --git a/readme.txt b/readme.txt\\nindex d8036c1..013b5bc 100644\\n--- a/readme.txt\\n+++ b/readme.txt\\n@@ -1,2 +1,2 @@\\n-Git is a version control system.\\n+Git is a distributed version control system.\\n Git is free software.\\n\\\\ No newline at end of file\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\")])]),a(\"p\",[t._v(\"可以得知文件做了什么修改\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_5-查看日志\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-查看日志\"}},[t._v(\"#\")]),t._v(\" 5.查看日志\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"git log\")])]),t._v(\" \"),a(\"p\",[t._v(\"能看到从近到远的提交日志\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"git log --pretty=oneline\")])]),t._v(\" \"),a(\"p\",[t._v(\"查看比较精简的日志\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_6-回退版本\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_6-回退版本\"}},[t._v(\"#\")]),t._v(\" 6.回退版本\")]),t._v(\" \"),a(\"p\",[t._v(\"在Git中，HEAD表示当前版本，也就是最新的提交。\")]),t._v(\" \"),a(\"p\",[t._v(\"上一个版本是HEAD^\")]),t._v(\" \"),a(\"p\",[t._v(\"上上一个版本是HEAD^^\")]),t._v(\" \"),a(\"p\",[t._v(\"前一百个版本HEAR~100\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"git reset\")])]),t._v(\" \"),a(\"p\",[t._v(\"回退上一个版本\"),a(\"code\",[t._v(\"git reset --hard HEAD^\")])]),t._v(\" \"),a(\"p\",[t._v(\"再还原为新版本，如果git bash没有关闭\")]),t._v(\" \"),a(\"p\",[t._v(\"git reset --hard 版本号\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"git reflog\")]),t._v(\"记录每次的命令\")]),t._v(\" \"),a(\"p\",[t._v(\"可以使用它查看版本号，并还原\")]),t._v(\" \"),a(\"div\",{staticClass:\"custom-block tip\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"小结\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"HEAD\")]),t._v(\"指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令\"),a(\"code\",[t._v(\"git reset --hard commit_id\")]),t._v(\"。\")]),t._v(\" \"),a(\"li\",[t._v(\"穿梭前，用\"),a(\"code\",[t._v(\"git log\")]),t._v(\"可以查看提交历史，以便确定要回退到哪个版本。\")]),t._v(\" \"),a(\"li\",[t._v(\"要重返未来，用\"),a(\"code\",[t._v(\"git reflog\")]),t._v(\"查看命令历史，以便确定要回到未来的哪个版本。\")])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_7-暂存区和工作区\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_7-暂存区和工作区\"}},[t._v(\"#\")]),t._v(\" 7.暂存区和工作区\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"工作区-working-directory\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#工作区-working-directory\"}},[t._v(\"#\")]),t._v(\" 工作区（Working Directory）\")]),t._v(\" \"),a(\"p\",[t._v(\"就是你在电脑里能看到的目录，比如我的\"),a(\"code\",[t._v(\"learngit\")]),t._v(\"文件夹就是一个工作区\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"版本库-repository\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#版本库-repository\"}},[t._v(\"#\")]),t._v(\" 版本库（Repository）\")]),t._v(\" \"),a(\"p\",[t._v(\"工作区有一个隐藏目录\"),a(\"code\",[t._v(\".git\")]),t._v(\"，这个不算工作区，而是Git的版本库。\")]),t._v(\" \"),a(\"p\",[t._v(\"Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支\"),a(\"code\",[t._v(\"master\")]),t._v(\"，以及指向\"),a(\"code\",[t._v(\"master\")]),t._v(\"的一个指针叫\"),a(\"code\",[t._v(\"HEAD\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"https://www.liaoxuefeng.com/files/attachments/919020037470528/0\",alt:\"git-repo\"}})]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"git add\")]),t._v(\"实际上就是把文件添加到暂存区\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"git commit\")]),t._v(\"实际上就是把暂存区的文件提交到当前分支\")]),t._v(\" \"),a(\"p\",[t._v(\"在创建Git仓库时，Git默认给我们创建了分支master，所以目前\"),a(\"code\",[t._v(\"git commit\")]),t._v(\"就是在往master提交更改\")]),t._v(\" \"),a(\"p\",[t._v(\"需要修改的文件通通放到暂存区，一次性提交暂存区的所有修改\")]),t._v(\" \"),a(\"p\",[t._v(\"untracked：未跟踪\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_8-管理修改\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_8-管理修改\"}},[t._v(\"#\")]),t._v(\" 8.管理修改\")]),t._v(\" \"),a(\"p\",[t._v(\"Git管理的是修改，不是文件\")]),t._v(\" \"),a(\"p\",[t._v(\"如果每次修改，没有用\"),a(\"code\",[t._v(\"git add\")]),t._v(\"到暂存区，就不会加入到commit中\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_9-撤销修改\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_9-撤销修改\"}},[t._v(\"#\")]),t._v(\" 9.撤销修改\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"git checkout -- file\")]),t._v(\"可以丢弃工作区的修改\")]),t._v(\" \"),a(\"p\",[t._v(\"命令\"),a(\"code\",[t._v(\"git checkout -- readme.txt\")]),t._v(\"意思就是，把\"),a(\"code\",[t._v(\"readme.txt\")]),t._v(\"文件在工作区的修改全部撤销，这里有两种情况：\")]),t._v(\" \"),a(\"p\",[t._v(\"一种是\"),a(\"code\",[t._v(\"readme.txt\")]),t._v(\"自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；\")]),t._v(\" \"),a(\"p\",[t._v(\"一种是\"),a(\"code\",[t._v(\"readme.txt\")]),t._v(\"已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。\")]),t._v(\" \"),a(\"p\",[t._v(\"总之，就是让这个文件回到最近一次\"),a(\"code\",[t._v(\"git commit\")]),t._v(\"或\"),a(\"code\",[t._v(\"git add\")]),t._v(\"时的状态。\")]),t._v(\" \"),a(\"p\",[t._v(\"从暂存区删除\"),a(\"code\",[t._v(\"git reset HEAD <file>\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"git reset\")]),t._v(\"命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用\"),a(\"code\",[t._v(\"HEAD\")]),t._v(\"时，表示最新的版本。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"_10-删除\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_10-删除\"}},[t._v(\"#\")]),t._v(\" 10.删除\")]),t._v(\" \"),a(\"p\",[t._v(\"从版本库中删除该文件，用命令\"),a(\"code\",[t._v(\"git rm\")]),t._v(\"删掉，并且\"),a(\"code\",[t._v(\"git commit\")]),t._v(\"，会将工作区的一起删除\")]),t._v(\" \"),a(\"p\",[t._v(\"或者先手动删除文件，再从版本库删除\")]),t._v(\" \"),a(\"p\",[t._v(\"如果在工作区删错了文件\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"git checkout -- test.txt\")]),t._v(\" 还在暂存区中，未被提交\")]),t._v(\" \"),a(\"p\",[t._v(\"如果已经提交，需要回退版本\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"git checkout\")]),t._v(\"其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。\")]),t._v(\" \"),a(\"p\",[t._v(\"注意：从来没有被添加到版本库就被删除的文件，是无法恢复的！\")]),t._v(\" \"),a(\"div\",{staticClass:\"custom-block danger\"},[a(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"注意\")]),t._v(\" \"),a(\"p\",[t._v(\"命令\"),a(\"code\",[t._v(\"git rm\")]),t._v(\"用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失\"),a(\"strong\",[t._v(\"最近一次提交后你修改的内容\")]),t._v(\"。\")])])])}),[],!1,null,null,null);s.default=_.exports}}]);","extractedComments":[]}