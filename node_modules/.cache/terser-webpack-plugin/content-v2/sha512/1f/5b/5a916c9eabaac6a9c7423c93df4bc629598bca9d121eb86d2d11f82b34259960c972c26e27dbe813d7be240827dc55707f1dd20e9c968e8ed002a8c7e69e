{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{210:function(t,_,v){\"use strict\";v.r(_);var i=v(3),e=Object(i.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[v(\"h1\",{attrs:{id:\"远程仓库-github\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#远程仓库-github\"}},[t._v(\"#\")]),t._v(\" 远程仓库（GitHub）\")]),t._v(\" \"),v(\"h2\",{attrs:{id:\"_1-创建ssh-key\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-创建ssh-key\"}},[t._v(\"#\")]),t._v(\" 1.创建SSH Key\")]),t._v(\" \"),v(\"p\",[t._v(\"在用户主目录下的.ssh目录，查看是否有id_rsa和id_rsa.pub两个文件，如果没有，打开Git Bash，创建SSH Key\")]),t._v(\" \"),v(\"p\",[v(\"code\",[t._v('ssh-keygen -t rsa -C \"a906505162@163.com\"')])]),t._v(\" \"),v(\"p\",[t._v(\"一路回车即可\")]),t._v(\" \"),v(\"p\",[v(\"code\",[t._v(\"id_rsa\")]),t._v(\"是私钥，不能泄露出去，\"),v(\"code\",[t._v(\"id_rsa.pub\")]),t._v(\"是公钥，可以放心地告诉任何人\")]),t._v(\" \"),v(\"h2\",{attrs:{id:\"_2-github配置\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-github配置\"}},[t._v(\"#\")]),t._v(\" 2.GitHub配置\")]),t._v(\" \"),v(\"p\",[t._v(\"在GitHub上打开“Account settings”，“SSH Keys”页面：\")]),t._v(\" \"),v(\"p\",[t._v(\"然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴\"),v(\"code\",[t._v(\"id_rsa.pub\")]),t._v(\"文件的内容，点“Add Key”，就能看到已经添加的Key：\")]),t._v(\" \"),v(\"div\",{staticClass:\"custom-block tip\"},[v(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"注\")]),t._v(\" \"),v(\"p\",[t._v(\"为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。\")]),t._v(\" \"),v(\"p\",[t._v(\"当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。\")]),t._v(\" \"),v(\"p\",[t._v(\"最后友情提示，在GitHub上免费托管的Git仓库，任何人都可以看到喔（但只有你自己才能改）。所以，不要把敏感信息放进去。\")]),t._v(\" \"),v(\"p\",[t._v(\"如果你不想让别人看到Git库，有两个办法，一个是交点保护费，让GitHub把公开的仓库变成私有的，这样别人就看不见了（不可读更不可写）。另一个办法是自己动手，搭一个Git服务器，因为是你自己的Git服务器，所以别人也是看不见的。这个方法我们后面会讲到的，相当简单，公司内部开发必备。\")])]),t._v(\" \"),v(\"h2\",{attrs:{id:\"_3-在github上创建仓库\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-在github上创建仓库\"}},[t._v(\"#\")]),t._v(\" 3.在GitHub上创建仓库\")]),t._v(\" \"),v(\"p\",[t._v(\"创建一个远程库后，在本地的仓库运行命令\")]),t._v(\" \"),v(\"p\",[v(\"code\",[t._v(\"git remote add origin git@github.com:mayuanyuan983/learngit.git\")])]),t._v(\" \"),v(\"p\",[t._v(\"添加后，远程库的名字就是\"),v(\"code\",[t._v(\"origin\")]),t._v(\"，这是Git默认的叫法，也可以改成别的，但是\"),v(\"code\",[t._v(\"origin\")]),t._v(\"这个名字一看就知道是远程库。\")]),t._v(\" \"),v(\"p\",[t._v(\"把本地库的所有内容推送到远程库上\")]),t._v(\" \"),v(\"p\",[v(\"code\",[t._v(\"git push -u origin master\")])]),t._v(\" \"),v(\"p\",[t._v(\"把本地库的内容推送到远程，用\"),v(\"code\",[t._v(\"git push\")]),t._v(\"命令，实际上是把当前分支\"),v(\"code\",[t._v(\"master\")]),t._v(\"推送到远程。\")]),t._v(\" \"),v(\"p\",[t._v(\"由于远程库是空的，我们第一次推送\"),v(\"code\",[t._v(\"master\")]),t._v(\"分支时，加上了\"),v(\"code\",[t._v(\"-u\")]),t._v(\"参数，Git不但会把本地的\"),v(\"code\",[t._v(\"master\")]),t._v(\"分支内容推送的远程新的\"),v(\"code\",[t._v(\"master\")]),t._v(\"分支，还会把本地的\"),v(\"code\",[t._v(\"master\")]),t._v(\"分支和远程的\"),v(\"code\",[t._v(\"master\")]),t._v(\"分支关联起来，在以后的推送或者拉取时就可以简化命令。\")]),t._v(\" \"),v(\"p\",[t._v(\"从现在起，只要本地作了提交，就可以通过命令：\")]),t._v(\" \"),v(\"p\",[v(\"code\",[t._v(\"git push origin master\")])]),t._v(\" \"),v(\"p\",[t._v(\"把本地\"),v(\"code\",[t._v(\"master\")]),t._v(\"分支的最新修改推送至GitHub，现在，你就拥有了真正的分布式版本库！\")]),t._v(\" \"),v(\"div\",{staticClass:\"custom-block tip\"},[v(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"小结\")]),t._v(\" \"),v(\"p\",[t._v(\"要关联一个远程库，使用命令\"),v(\"code\",[t._v(\"git remote add origin git@server-name:path/repo-name.git\")]),t._v(\"；\")]),t._v(\" \"),v(\"p\",[t._v(\"关联后，使用命令\"),v(\"code\",[t._v(\"git push -u origin master\")]),t._v(\"第一次推送master分支的所有内容；\")]),t._v(\" \"),v(\"p\",[t._v(\"此后，每次本地提交后，只要有必要，就可以使用命令\"),v(\"code\",[t._v(\"git push origin master\")]),t._v(\"推送最新修改；\")]),t._v(\" \"),v(\"p\",[t._v(\"分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！\")])]),t._v(\" \"),v(\"h4\",{attrs:{id:\"_4-从远程库克隆\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-从远程库克隆\"}},[t._v(\"#\")]),t._v(\" 4.从远程库克隆\")]),t._v(\" \"),v(\"p\",[t._v(\"在GitHub上新建一个仓库\")]),t._v(\" \"),v(\"p\",[v(\"code\",[t._v(\"git clone git@github.com:mayuanyuan983/gitskills.git\")])]),t._v(\" \"),v(\"p\",[t._v(\"你也许还注意到，GitHub给出的地址不止一个，还可以用\"),v(\"code\",[t._v(\"https://github.com/michaelliao/gitskills.git\")]),t._v(\"这样的地址。实际上，Git支持多种协议，默认的\"),v(\"code\",[t._v(\"git://\")]),t._v(\"使用ssh，但也可以使用\"),v(\"code\",[t._v(\"https\")]),t._v(\"等其他协议。\")]),t._v(\" \"),v(\"p\",[t._v(\"使用\"),v(\"code\",[t._v(\"https\")]),t._v(\"除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令，但是在某些只开放http端口的公司内部就无法使用\"),v(\"code\",[t._v(\"ssh\")]),t._v(\"协议而只能用\"),v(\"code\",[t._v(\"https\")]),t._v(\"。\")]),t._v(\" \"),v(\"p\",[t._v(\"要克隆一个仓库，首先必须知道仓库的地址，然后使用\"),v(\"code\",[t._v(\"git clone\")]),t._v(\"命令克隆。\")]),t._v(\" \"),v(\"p\",[t._v(\"Git支持多种协议，包括\"),v(\"code\",[t._v(\"https\")]),t._v(\"，但\"),v(\"code\",[t._v(\"ssh\")]),t._v(\"协议速度最快。\")])])}),[],!1,null,null,null);_.default=e.exports}}]);","extractedComments":[]}