{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{281:function(v,a,_){\"use strict\";_.r(a);var J=_(3),l=Object(J.a)({},(function(){var v=this,a=v.$createElement,_=v._self._c||a;return _(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":v.$parent.slotKey}},[_(\"h1\",{attrs:{id:\"java学习笔记\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#java学习笔记\"}},[v._v(\"#\")]),v._v(\" JAVA学习笔记\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"Java是基于JVM虚拟机的跨平台语言，一次编写，到处运行；\")]),v._v(\" \"),_(\"li\",[v._v(\"Java程序易于编写，而且有内置垃圾收集，不必考虑内存管理；\")]),v._v(\" \"),_(\"li\",[v._v(\"Java虚拟机拥有工业级的稳定性和高度优化的性能，且经过了长时期的考验；\")]),v._v(\" \"),_(\"li\",[v._v(\"Java拥有最广泛的开源社区支持，各种高质量组件随时可用。\")])]),v._v(\" \"),_(\"p\",[v._v(\"Java介于编译型语言和解释型语言之间。编译型语言如C、C++，代码是直接编译成机器码执行，但是不同的平台（x86、ARM等）CPU的指令集不同，因此，需要编译出每一种平台的对应机器码。解释型语言如Python、Ruby没有这个问题，可以由解释器直接加载源码然后运行，代价是运行效率太低。而Java是将代码编译成一种“字节码”，它类似于抽象的CPU指令，然后，针对不同平台编写虚拟机，不同平台的虚拟机负责加载字节码并执行，这样就实现了“一次编写，到处运行”的效果。当然，这是针对Java开发者而言。对于虚拟机，需要为每个平台分别开发。为了保证不同平台、不同公司开发的虚拟机都能正确执行Java字节码，SUN公司制定了一系列的Java虚拟机规范。从实践的角度看，JVM的兼容性做得非常好，低版本的Java字节码完全可以正常运行在高版本的JVM上。\")]),v._v(\" \"),_(\"p\",[v._v(\"Java SE就是标准版，包含标准的JVM和标准库，而Java EE是企业版，它只是在Java SE的基础上加上了大量的API和库，以便方便开发Web应用、数据库、消息服务等，Java EE的应用使用的虚拟机和Java SE完全相同。\")]),v._v(\" \"),_(\"p\",[v._v(\"Java ME就和Java SE不同，它是一个针对嵌入式设备的“瘦身版”，Java SE的标准库无法在Java ME上使用，Java ME的虚拟机也是“瘦身版”。\")]),v._v(\" \"),_(\"ol\",[_(\"li\",[v._v(\"首先要学习Java SE，掌握Java语言本身、Java核心开发技术以及Java标准库的使用；\")]),v._v(\" \"),_(\"li\",[v._v(\"如果继续学习Java EE，那么Spring框架、数据库开发、分布式架构就是需要学习的；\")]),v._v(\" \"),_(\"li\",[v._v(\"如果要学习大数据开发，那么Hadoop、Spark、Flink这些大数据平台就是需要学习的，他们都基于Java或Scala开发；\")]),v._v(\" \"),_(\"li\",[v._v(\"如果想要学习移动开发，那么就深入Android平台，掌握Android App开发。\")])]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"JDK：Java Development Kit\")]),v._v(\" \"),_(\"li\",[v._v(\"JRE：Java Runtime Environment\")])]),v._v(\" \"),_(\"p\",[v._v(\"简单地说，JRE就是运行Java字节码的虚拟机。但是，如果只有Java源码，要编译成Java字节码，就需要JDK，因为JDK除了包含JRE，还提供了编译器、调试器等开发工具。\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"java：这个可执行程序其实就是JVM，运行Java程序，就是启动JVM，然后让JVM执行指定的编译后的代码；\")]),v._v(\" \"),_(\"li\",[v._v(\"javac：这是Java的编译器，它用于把Java源码文件（以\"),_(\"code\",[v._v(\".java\")]),v._v(\"后缀结尾）编译为Java字节码文件（以\"),_(\"code\",[v._v(\".class\")]),v._v(\"后缀结尾）；\")]),v._v(\" \"),_(\"li\",[v._v(\"jar：用于把一组\"),_(\"code\",[v._v(\".class\")]),v._v(\"文件打包成一个\"),_(\"code\",[v._v(\".jar\")]),v._v(\"文件，便于发布；\")]),v._v(\" \"),_(\"li\",[v._v(\"javadoc：用于从Java源码中自动提取注释并生成文档；\")]),v._v(\" \"),_(\"li\",[v._v(\"jdb：Java调试器，用于开发阶段的运行调试。\")])]),v._v(\" \"),_(\"p\",[v._v(\"一个Java源码只能定义一个\"),_(\"code\",[v._v(\"public\")]),v._v(\"类型的class，并且class名称和文件名要完全一致；\")]),v._v(\" \"),_(\"p\",[v._v(\"使用\"),_(\"code\",[v._v(\"javac\")]),v._v(\"可以将\"),_(\"code\",[v._v(\".java\")]),v._v(\"源码编译成\"),_(\"code\",[v._v(\".class\")]),v._v(\"字节码；\")]),v._v(\" \"),_(\"p\",[v._v(\"使用\"),_(\"code\",[v._v(\"java\")]),v._v(\"可以运行一个已编译的Java程序，参数是类名。\")]),v._v(\" \"),_(\"p\",[v._v(\"Java规定，某个类定义的\"),_(\"code\",[v._v(\"public static void main(String[] args)\")]),v._v(\"是Java程序的固定入口方法，因此，Java程序总是从\"),_(\"code\",[v._v(\"main\")]),v._v(\"方法开始执行。\")]),v._v(\" \"),_(\"p\",[v._v(\"我们注意到\"),_(\"code\",[v._v(\"public\")]),v._v(\"除了可以修饰\"),_(\"code\",[v._v(\"class\")]),v._v(\"外，也可以修饰方法。而关键字\"),_(\"code\",[v._v(\"static\")]),v._v(\"是另一个修饰符，它表示静态方法，后面我们会讲解方法的类型，目前，我们只需要知道，Java入口程序规定的方法必须是静态方法，方法名必须为\"),_(\"code\",[v._v(\"main\")]),v._v(\"，括号内的参数必须是String数组。\")]),v._v(\" \"),_(\"p\",[v._v(\"在方法内部，语句才是真正的执行代码。Java的每一行语句必须以分号结束：\")]),v._v(\" \"),_(\"h2\",{attrs:{id:\"变量\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#变量\"}},[v._v(\"#\")]),v._v(\" 变量\")]),v._v(\" \"),_(\"p\",[v._v(\"变量必须先定义后使用，在定义变量的时候，可以给它一个初始值。\")]),v._v(\" \"),_(\"p\",[v._v(\"等号\"),_(\"code\",[v._v(\"=\")]),v._v(\"是赋值语句\")]),v._v(\" \"),_(\"h3\",{attrs:{id:\"基本数据类型\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基本数据类型\"}},[v._v(\"#\")]),v._v(\" 基本数据类型\")]),v._v(\" \"),_(\"p\",[v._v(\"基本数据类型是CPU可以直接进行运算的类型。Java定义了以下几种基本数据类型：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"整数类型：byte，short，int，long\")]),v._v(\" \"),_(\"li\",[v._v(\"浮点数类型：float，double\")]),v._v(\" \"),_(\"li\",[v._v(\"字符类型：char\")]),v._v(\" \"),_(\"li\",[v._v(\"布尔类型：boolean\")])])])}),[],!1,null,null,null);a.default=l.exports}}]);","extractedComments":[]}