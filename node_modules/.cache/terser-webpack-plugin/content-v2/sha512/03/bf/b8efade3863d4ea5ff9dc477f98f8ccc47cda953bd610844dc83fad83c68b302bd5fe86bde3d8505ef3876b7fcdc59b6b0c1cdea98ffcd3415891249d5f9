{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{224:function(s,a,t){\"use strict\";t.r(a);var e=t(3),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"oracle-rownum用法和分页查询总结\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#oracle-rownum用法和分页查询总结\"}},[s._v(\"#\")]),s._v(\" Oracle ROWNUM用法和分页查询总结\")]),s._v(\" \"),t(\"p\",[t(\"a\",{attrs:{href:\"https://blog.csdn.net/nalw2012/article/details/79033145\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"Oracle ROWNUM用法和分页查询总结\"),t(\"OutboundLink\")],1)]),s._v(\" \"),t(\"h2\",{attrs:{id:\"rownum\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rownum\"}},[s._v(\"#\")]),s._v(\" ROWNUM\")]),s._v(\" \"),t(\"p\",[s._v(\"可能都知道\"),t(\"em\",[s._v(\"ROWNUM\")]),s._v(\"只适用于小于或小于等于，如果进行等于判断，那么只能等于\"),t(\"em\",[s._v(\"1\")]),s._v(\"，不能进行大于的比较。\\nROWNUM是oracle系统顺序分配为从查询返回的行的编号，返回的第一行分配的是1，第二行是2，依此类推。\\n\"),t(\"em\",[s._v(\"ROWNUM\")]),s._v(\"总是从\"),t(\"em\",[s._v(\"1\")]),s._v(\"开始，不管当前的记录是否满足查询结果，\"),t(\"em\",[s._v(\"ROWNUM\")]),s._v(\"返回的值都是\"),t(\"em\",[s._v(\"1\")]),s._v(\"，如果这条记录的值最终满足所有的条件，那么\"),t(\"em\",[s._v(\"ROWNUM\")]),s._v(\"会递加，下一条记录的\"),t(\"em\",[s._v(\"ROWNUM\")]),s._v(\"会返回\"),t(\"em\",[s._v(\"2\")]),s._v(\"，否则下一条记录的\"),t(\"em\",[s._v(\"ROWNUM\")]),s._v(\"仍然返回\"),t(\"em\",[s._v(\"1\")]),s._v(\"。\\n理解了这一点，就清楚为什么一般的\"),t(\"em\",[s._v(\"ROWNUM\")]),s._v(\"大于某个值或等于某个不为\"),t(\"em\",[s._v(\"1\")]),s._v(\"的值是无法返回结果的，因此对于每条记录的\"),t(\"em\",[s._v(\"ROWNUM\")]),s._v(\"都是\"),t(\"em\",[s._v(\"1\")]),s._v(\"，而\"),t(\"em\",[s._v(\"ROWNUM\")]),s._v(\"为\"),t(\"em\",[s._v(\"1\")]),s._v(\"不满足查询的结果，所以下一条记录的\"),t(\"em\",[s._v(\"ROWNUM\")]),s._v(\"不会递增，仍然是\"),t(\"em\",[s._v(\"1\")]),s._v(\"，因此所有的记录都不满足条件。\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"分页查询方法\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分页查询方法\"}},[s._v(\"#\")]),s._v(\" 分页查询方法\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_1-between\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-between\"}},[s._v(\"#\")]),s._v(\" 1.between\")]),s._v(\" \"),t(\"p\",[s._v(\"查询的最外层控制分页的最小值和最大值\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-sql line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-sql\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"SELECT\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"FROM\")]),s._v(\"   \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"  \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"SELECT\")]),s._v(\" A\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" ROWNUM RN   \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"FROM\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"SELECT\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"FROM\")]),s._v(\" TABLE_NAME\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" A   \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"WHERE\")]),s._v(\" RN \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"BETWEEN\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"AND\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),s._v(\"  \\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"_2\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2\"}},[s._v(\"#\")]),s._v(\" 2. <=          >=\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-sql line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-sql\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"SELECT\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"FROM\")]),s._v(\"   \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"  \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"SELECT\")]),s._v(\" A\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" ROWNUM RN   \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"FROM\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"SELECT\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"FROM\")]),s._v(\" TABLE_NAME\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" A   \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"WHERE\")]),s._v(\" ROWNUM \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),s._v(\"  \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"WHERE\")]),s._v(\" RN \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\" \\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"_3-hint\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-hint\"}},[s._v(\"#\")]),s._v(\" 3.HINT\")]),s._v(\" \"),t(\"p\",[s._v(\"考虑到多表联合的情况，如果不介意在系统中使用HINT(优化器)的话，可以将分页的查询语句改写为：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-sql line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-sql\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"SELECT\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"/*+ FIRST_ROWS */\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"FROM\")]),s._v(\"   \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"  \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"SELECT\")]),s._v(\" A\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" ROWNUM RN   \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"FROM\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"SELECT\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"FROM\")]),s._v(\" TABLE_NAME\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" A   \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"WHERE\")]),s._v(\" ROWNUM \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"40\")]),s._v(\"  \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"WHERE\")]),s._v(\" RN \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"21\")]),s._v(\"  \\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\")])]),t(\"p\",[s._v(\"效率：绝大多数的情况下，第2个查询的效率比第1个高得多\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"排序列不唯一所带来的问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#排序列不唯一所带来的问题\"}},[s._v(\"#\")]),s._v(\" 排序列不唯一所带来的问题\")]),s._v(\" \"),t(\"p\",[s._v(\"如果用来排序的列不唯一，也就是存在值相等的行，可能会造成第一次在前10条返回记录中，某行数据出现了，而第二次在11到第20条记录中，某行数据又出现了。一条数据重复出现两次，就必然意味着有数据在两次查询中都不会出现。\\n其实造成这个问题的原因很简单，是由于排序列不唯一造成的。Oracle这里使用的排序算法不具有稳定性，也就是说，对于键值相等的数据，这种算法完成排序后，不保证这些键值相等的数据保持排序前的顺序。\\n解决这个问题其实也很简单。有两种方法可以考虑。\\n1）在使用不唯一的字段排序时，后面跟一个唯一的字段。\\n一般在排序字段后面跟一个主键就可以了，如果表不存在主键，跟*ROWID也可以。\"),t(\"em\",[s._v(\"这种方法最简单，且对性能的影响最小。\\n2）另一种方法就是使用前面给出过多次的\")]),s._v(\"BETWEEN AND的方法。\\n这种方式由于采用表数据的全排序，每次只取全排序中的某一部分数据，因此不会出现上面提到的重复数据问题。\\n但是正是由于使用了全排序，而且*ROWNUM信息无法推到查询内部，导致这种写法的执行效率很低\")])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}