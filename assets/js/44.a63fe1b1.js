(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{458:function(t,a,s){"use strict";s.r(a);var e=s(62),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"mybatis-xml标签详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-xml标签详解"}},[t._v("#")]),t._v(" Mybatis XML标签详解")]),t._v(" "),s("p",[t._v("https://zhuanlan.zhihu.com/p/260336151")]),t._v(" "),s("h2",{attrs:{id:"select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[t._v("#")]),t._v(" select")]),t._v(" "),s("p",[t._v("select用来映射查询语句")]),t._v(" "),s("h3",{attrs:{id:"select提供的二级标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select提供的二级标签"}},[t._v("#")]),t._v(" select提供的二级标签")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("select")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("selectPerson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("parameterType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("parameterMap")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("deprecated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resultType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("hashmap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resultMap")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("personResultMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("flushCache")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("useCache")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("timeout")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("10000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("fetchSize")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("256"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("statementType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("PREPARED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resultSetType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("FORWARD_ONLY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("databaseId")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resultOrdered")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resultSets")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("xxx,xxx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("标签名称")]),t._v(" "),s("th",[t._v("是否必选标签")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("id")]),t._v(" "),s("td",[t._v("必选")]),t._v(" "),s("td",[t._v("同一个命名空间里面的唯一标识符，如果需要被外部接口调用，则需要和Mapper接口中的方法名保持一致")])]),t._v(" "),s("tr",[s("td",[t._v("parameterType")]),t._v(" "),s("td",[t._v("可选")]),t._v(" "),s("td",[t._v("参数类的完全限定名或别名，如果不写，Mybatis在解析xml文件的时候会默认设为unset，然后根据TypeHandler推断出参数类型，如果有多个参数的情况下建议不写，否则可能出现参数类型转换错误")])]),t._v(" "),s("tr",[s("td",[t._v("parameterMap")]),t._v(" "),s("td",[t._v("-")]),t._v(" "),s("td",[t._v("过期属性")])]),t._v(" "),s("tr",[s("td",[t._v("resultType")]),t._v(" "),s("td",[t._v("非必选")]),t._v(" "),s("td",[t._v("resultType和resultMap不能并存，两者只能选一个。主要用来定义一个返回结果集对象的全限定名或者别名。如果接收参数是一个集合，那么这里定义的是集合包含的类型，而不是集合本身")])]),t._v(" "),s("tr",[s("td",[t._v("resultMap")]),t._v(" "),s("td",[t._v("非必选")]),t._v(" "),s("td",[t._v("resultType和resultMap不能并存，两者只能选一个。resultMap类型的结果集映射。")])]),t._v(" "),s("tr",[s("td",[t._v("flushCache")]),t._v(" "),s("td",[t._v("可选")]),t._v(" "),s("td",[t._v("设置为true时，任何时候只要语句被调用，都会导致本地缓存和二级缓存都被清空，默认值：false")])]),t._v(" "),s("tr",[s("td",[t._v("useCache")]),t._v(" "),s("td",[t._v("可选")]),t._v(" "),s("td",[t._v("设置为true时，会导致本条语句的结果被二级缓存，对select语句默认为true，对insert、delete、update等默认为false")])]),t._v(" "),s("tr",[s("td",[t._v("timeout")]),t._v(" "),s("td",[t._v("可选")]),t._v(" "),s("td",[t._v("这个设置是在抛出异常之前，驱动程序等待数据库返回请求结果的秒数。默认值为unset（依赖驱动）。")])]),t._v(" "),s("tr",[s("td",[t._v("fetchSize")]),t._v(" "),s("td",[t._v("可选")]),t._v(" "),s("td",[t._v("这是尝试影响驱动程序每次批量返回的结果行数和这个设置值相等。默认值为unset(依赖驱动)。注意这个只是尝试，假如设置其为10万，而数据库驱动最高支持5万，那么也只能返回5万数据")])]),t._v(" "),s("tr",[s("td",[t._v("statementType")]),t._v(" "),s("td",[t._v("可选")]),t._v(" "),s("td",[t._v("可以选择STATEMENT、PREPARED、CALLABLE中的一个，这会让MyBatis分别使用Statement、PreparedStatement或CallableStatement，默认值是PREPARED，也就是使用预编译PreparedStatement语句")])]),t._v(" "),s("tr",[s("td",[t._v("resultSetType")]),t._v(" "),s("td",[t._v("可选")]),t._v(" "),s("td",[t._v("可以选择以下三种的一个，默认为unset（依赖驱动）。FORWARD_ONLY：只允许游标向前访问；SCROLL_SENSITIVE：允许游标双向滚动，但不会及时更新数据，也就是说如果数据库中的数据被修改过，并不会在resultSet中体现出来；SCROLL_INSENSITIVE：允许游标双向滚动，如果数据库中的数据被修改过，会及时更新到resultSet")])]),t._v(" "),s("tr",[s("td",[t._v("databaseld")]),t._v(" "),s("td",[t._v("可选")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("resultOrdered")]),t._v(" "),s("td",[t._v("可选")]),t._v(" "),s("td",[t._v("这个设置仅针对嵌套结果select语句适用。如果为true，就是假设包含了嵌套结果集或是分组了，这样的话当返回一个主结果行时弥就不会发生有对前面结果集的引用的情况，这就使得在获取嵌套的结果集的时候不至于导致内存不够用。默认值：false")])]),t._v(" "),s("tr",[s("td",[t._v("resultSets")]),t._v(" "),s("td",[t._v("可选")]),t._v(" "),s("td",[t._v("这个设置仅对多结果集的情况适用，它将列出语句执行后返回的结果集并每个结果集给一个名称，名称是逗号分隔的")])]),t._v(" "),s("tr",[s("td",[t._v("lang")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("自定义语言")])])])]),t._v(" "),s("br"),t._v(" "),s("h3",{attrs:{id:"resultsettype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resultsettype"}},[t._v("#")]),t._v(" resultSetType")]),t._v(" "),s("p",[t._v("可选标签。可以选择以下三种类型中的一个，默认为unset（依赖驱动）。")]),t._v(" "),s("p",[t._v("FORWARD_ONLY：只允许游标向前访问")]),t._v(" "),s("p",[t._v("SCROLL_SENSITIVE：允许游标双向滚动，但不会及时更新数据，也就是说如果数据库中的数据被修改过，并不会在resultSet中体现出来")]),t._v(" "),s("p",[t._v("SCROLL_INSENSITIVE：许游标双向滚动，如果数据库中的数据被修改过，会及时更新到resultSet")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" userId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user_id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("而MyBatis只是把这些操作封装了，底层实际上还是这个操作，rs.next()游标向前滚，其实还有一个rs.previous()表示游标可以向后滚。")]),t._v(" "),s("p",[t._v("所以FORWARD_ONLY只允许向前滚，访问过的数据就会释放内存，在某些场景中可以提升性能。")]),t._v(" "),s("p",[t._v("后面那两个都是允许双向滚动，所以即使访问过的数据，内存也不能释放。这两个的区别就是一个对数据敏感，一个对数据不敏感。")]),t._v(" "),s("ul",[s("li",[t._v("对数据不敏感 就是说当我们查询出结果之后，会将整个结果集都缓存在内存中，假如有一条数据还没读取到(还在while循环中)这时候有另外一个线程修改了这条数据，那么当我们后面读取这条数据的时候，还是读取到修改之前的。")]),t._v(" "),s("li",[t._v("对数据敏感 就是说当我们查询出结果之后，只会缓存一个rowid，而并不会缓存整条数据，假如有一条数据还没读取到(还在while循环中)这时候有另外一个线程修改了这条数据，那么当我们后面读取这条数据的时候，会根据rowid去查询数据，查询到的就是最新的数据。不过需要注意的是，因为delete的时候数据其实还在，只是打了个标记，所以如果一条数据被删除了，是体现不出来的。同理，insert也不影响，因为查询出来的数据不包含insert数据的rowid。")])]),t._v(" "),s("p",[t._v("如果对于MySQL的InnoDB引擎的MVCC机制，那么数据肯定是不会敏感的，因为其他事务改了当前事务也看不到。")]),t._v(" "),s("h2",{attrs:{id:"insert"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insert"}},[t._v("#")]),t._v(" insert")]),t._v(" "),s("p",[t._v("insert用来映射插入语句")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("insert")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("insertLwUser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("parameterType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("lwUser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("parameterMap")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("deprecated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("flushCache")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("statementType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("PREPARED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("keyProperty")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("keyColumn")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("useGeneratedKeys")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("timeout")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("20"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("databaseId")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("table",[s("thead",[s("tr",[s("th",[t._v("标签名称")]),t._v(" "),s("th",[t._v("是否必选标签")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("useGeneratedKeys")]),t._v(" "),s("td",[t._v("可选")]),t._v(" "),s("td",[t._v("配置为true时，MyBatis会使用JDBC的getGeneratedKeys方法来取出由数据库内部生成的主键（比如MySQL和SQL Server这样的关系数据库管理系统的自动递增字段），默认值为false")])]),t._v(" "),s("tr",[s("td",[t._v("keyProperty")]),t._v(" "),s("td",[t._v("可选")]),t._v(" "),s("td",[t._v("唯一标记一个属性，MyBatis会将通过getGeneratedKeys的返回值或者通过insert语句的selectKey子元素设置它的键值，默认值是unset。如果希望得到多个生成的列，也可以是逗号分隔的属性名称列表")])]),t._v(" "),s("tr",[s("td",[t._v("keyColumn")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("通过生成的键值设置表中的列名，这个设置仅在某些数据库像PostgreSQL是必须的，当主键列不是表中的第一列的时候需要设置。如果希望得到多个生成的列，也可以是逗号分隔的属性名称列表。")])])])]),t._v(" "),s("h3",{attrs:{id:"获取自增主键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取自增主键"}},[t._v("#")]),t._v(" 获取自增主键")]),t._v(" "),s("h4",{attrs:{id:"获取自增主键-可以通过keyproperty来映射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取自增主键-可以通过keyproperty来映射"}},[t._v("#")]),t._v(" 获取自增主键，可以通过keyProperty来映射")]),t._v(" "),s("h4",{attrs:{id:"通过selectkey获取自定义列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过selectkey获取自定义列"}},[t._v("#")]),t._v(" 通过selectKey获取自定义列")]),t._v(" "),s("p",[t._v("假如有些数据库不支持自增主键，或者说我们想插入自定义的主键，而又不想在业务代码中编写逻辑，那么就可以通过MyBatis的selectKey来获取。")]),t._v(" "),s("p",[t._v("selectKey中的order属性有2个选择：BEFORE和AFTER。")]),t._v(" "),s("p",[t._v("BEFORE：表示先执行selectKey的语句，然后将查询到的值设置到JavaBean对应属性上，然后再执行insert语句。")]),t._v(" "),s("p",[t._v("AFTER：表示先执行AFTER语句，然后再执行selectKey语句，并将selectKey得到的值设置到JavaBean中的属性。上面示例中如果改成AFTER，那么插入的address就会是空值，但是返回的JavaBean属性内会有值。")]),t._v(" "),s("p",[t._v("selectKey中返回的值只能有一条数据，如果满足条件的数据有多条会报错，所以一般都是用于生成主键，确保唯一，或者在selectKey后面的语句加上条件，确保唯一")]),t._v(" "),s("h2",{attrs:{id:"update"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[t._v("#")]),t._v(" update")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<update\nid="UpdateLwUser"\nparameterType="lwUser"\nparameterMap="deprecated"\nflushCache="true"\nstatementType="PREPARED"\nkeyProperty=""\nkeyColumn=""\nuseGeneratedKeys=""\ntimeout="20"\ndatabaseId="mysql"\nlang="">\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("这个标签和insert基本一致")]),t._v(" "),s("h2",{attrs:{id:"delete"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[t._v("#")]),t._v(" delete")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<delete\nid="insertLwUser"\nparameterType="lwUser"\nparameterMap="deprecated"\nflushCache="true"\nstatementType="PREPARED"\ntimeout="20"\ndatabaseId="mysql"\nlang="">\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("这里的标签除了少了useGeneratedKeys，keyProperty和keyColumn三个标签之外，其余的和insert，update一样。")]),t._v(" "),s("h2",{attrs:{id:"sql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sql"}},[t._v("#")]),t._v(" sql")]),t._v(" "),s("p",[t._v("这个元素可以被用来定义可重用的 SQL 代码段，可以包含在其他语句中")]),t._v(" "),s("h2",{attrs:{id:"cache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cache"}},[t._v("#")]),t._v(" cache")]),t._v(" "),s("p",[t._v("MyBatis 包含一个非常强大的查询缓存特性,它可以非常方便地配置和定制。但是默认情况下只开启了一级缓存，即局部的session缓存,如果想要开启二级缓存。那么就需要使用到cache标签")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<cache\ntype="com.lonelyWolf.xxx"\neviction="FIFO"\nflushInterval="60000"\nreadOnly="true"\nsize="512"/>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("这些属性都是有默认值的，所以一般情况下可以直接使用：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("</cache>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" type")]),t._v(" "),s("p",[t._v("如果说我们自己自定义了缓存，那么这里可以配置自定义缓存类的全限定名或者别名，如果没有自定义缓存，则不需要配置type属性。")]),t._v(" "),s("h3",{attrs:{id:"eviction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eviction"}},[t._v("#")]),t._v(" eviction")]),t._v(" "),s("p",[t._v("缓存回收策略，MyBatis中more提供了以下策略可以选择：")]),t._v(" "),s("ul",[s("li",[t._v("LRU：最近最少使用算法（默认算法）。移除最长时间不被使用的对象")]),t._v(" "),s("li",[t._v("FIFO：先进先出算法。按对象进入缓存的顺序来移除它们")]),t._v(" "),s("li",[t._v("SOFT：软引用。移除基于垃圾回收器状态和软引用规则的对象。")]),t._v(" "),s("li",[t._v("WEAK：弱引用。更积极地移除基于垃圾收集器状态和弱引用规则的对象")])]),t._v(" "),s("h3",{attrs:{id:"flushinterval"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flushinterval"}},[t._v("#")]),t._v(" flushInterval")]),t._v(" "),s("p",[t._v("刷新间隔时间(单位是毫秒)。可以被设置为任意的正整数。默认情况是不设置,也就是不会主动刷新缓存(只有等待sql被执行的时候才会被刷新)。")]),t._v(" "),s("h3",{attrs:{id:"readonly"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readonly"}},[t._v("#")]),t._v(" readOnly")]),t._v(" "),s("p",[t._v("是否只读。属性可以被设置为 true 或 false。如果设置为true,那么只读的缓存会给所有调用者返回缓存对象的相同示例，因为缓存无法被修改。这在一定程度上可以提升性能。\n默认是false，也就是可以修改缓存，那么当读取缓存的时候会通过序列化的方式返回缓存对象的拷贝，虽然这么做会慢一点,但是安全,因此默认才会设置为false，允许修改缓存。")]),t._v(" "),s("h3",{attrs:{id:"size"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#size"}},[t._v("#")]),t._v(" size")]),t._v(" "),s("p",[t._v("引用数目。通俗点就是可以缓存的个数，默认值是1024。超过了设置值的时候，就会采用上面的算法进行覆盖")]),t._v(" "),s("h3",{attrs:{id:"cache-ref"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cache-ref"}},[t._v("#")]),t._v(" cache-ref")]),t._v(" "),s("p",[t._v("假如我们在其中一个Mapper中已经配置好了缓存，然后在其他Mapper想要共用，那么在这样的情况下就可以使用cache-ref元素来引用另外一个缓存，从而不需要重复配置。如：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<cache-ref namespace="com.lonelyWolf.mybatis.mapper.UserMapper"/>\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("这样当前Mapper就可以共用UserMapper文件中的相同缓存了。")]),t._v(" "),s("h2",{attrs:{id:"resultmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resultmap"}},[t._v("#")]),t._v(" resultMap")]),t._v(" "),s("p",[t._v("上面介绍select标签的时候提到，select标签的返回结果可以使用resultMap，但是一旦我们使用了resultMap时，我们就必须要自己定义一个resultMap。")]),t._v(" "),s("p",[t._v("resultMap可以自由定义，所以可以接受非常复杂的查询返回结果集。")])])}),[],!1,null,null,null);a.default=n.exports}}]);