(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{444:function(a,t,_){"use strict";_.r(t);var s=_(62),v=Object(s.a)({},(function(){var a=this,t=a.$createElement,_=a._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("h1",{attrs:{id:"性能测试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能测试"}},[a._v("#")]),a._v(" 性能测试")]),a._v(" "),_("h2",{attrs:{id:"性能测试-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能测试-2"}},[a._v("#")]),a._v(" 性能测试")]),a._v(" "),_("h3",{attrs:{id:"性能测试的指标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能测试的指标"}},[a._v("#")]),a._v(" 性能测试的指标")]),a._v(" "),_("h4",{attrs:{id:"_1-响应时间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-响应时间"}},[a._v("#")]),a._v(" 1.响应时间")]),a._v(" "),_("p",[a._v("响应时间就是用户发出请求到用户收到系统处理结果所需要的时间。")]),a._v(" "),_("h4",{attrs:{id:"_2-并发数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-并发数"}},[a._v("#")]),a._v(" 2.并发数")]),a._v(" "),_("p",[a._v("并发数是系统能同时处理请求的数目即同时提交请求的用户数目。")]),a._v(" "),_("h4",{attrs:{id:"_3-吞吐量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-吞吐量"}},[a._v("#")]),a._v(" 3.吞吐量")]),a._v(" "),_("p",[a._v("吞吐量指的是系统单位时间内系统处理的请求数量。衡量吞吐量有几个重要的参数：QPS（TPS）、并发数、响应时间。")]),a._v(" "),_("ol",[_("li",[a._v("QPS（Query Per Second）：服务器每秒可以执行的查询次数。")]),a._v(" "),_("li",[a._v("TPS（Transaction Per Second）：服务器每秒处理的事务数（这里的一个事务可以理解为客户发出请求到收到服务器的过程）。")]),a._v(" "),_("li",[a._v("并发数：系统能同时请求的数目即同时提交请求的用户数目。")]),a._v(" "),_("li",[a._v("响应时间：一般取多次请求的平均响应时间。")])]),a._v(" "),_("ul",[_("li",[a._v("QPS（TPS） = 并发数 / 平均响应时间")]),a._v(" "),_("li",[a._v("并发数 = QPS * 平均响应时间")])]),a._v(" "),_("h4",{attrs:{id:"qps-和-tps-的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#qps-和-tps-的区别"}},[a._v("#")]),a._v(" QPS 和 TPS 的区别")]),a._v(" "),_("p",[a._v("QPS 基本类似于 TPS，但是不同的是，对于一个页面的一次访问，形成一个TPS；但一次页面请求，可能产生多次对服务器的请求，服务器对这些请求，就可计入“QPS”之中。如，访问一个页面会请求服务器2次，一次访问，产生1个“T”，2个“Q”。")]),a._v(" "),_("h4",{attrs:{id:"_4-性能计数器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-性能计数器"}},[a._v("#")]),a._v(" 4.性能计数器")]),a._v(" "),_("p",[a._v("性能计数器是描述服务器或者操作系统的一些数据指标如内存使用、CPU使用、磁盘与网络I/O等情况。")]),a._v(" "),_("h3",{attrs:{id:"常见的性能测试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见的性能测试"}},[a._v("#")]),a._v(" 常见的性能测试")]),a._v(" "),_("h3",{attrs:{id:"性能测试-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能测试-3"}},[a._v("#")]),a._v(" 性能测试")]),a._v(" "),_("p",[a._v("性能测试方法是通过测试工具模拟用户请求，目的主要是为了测试系统的性能是否满足要求。通俗的说，这种方法就是要在特定的运行条件下验证系统的能力状态。")]),a._v(" "),_("p",[a._v("性能测试是你在对系统性能已经有了解的前提之后进行的，并且有明确的性能指标。")]),a._v(" "),_("h3",{attrs:{id:"负载测试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负载测试"}},[a._v("#")]),a._v(" 负载测试")]),a._v(" "),_("p",[a._v("对被测试的系统继续加大请求压力，直到服务器的某个资源已经达到饱和了，比如系统的缓存已经不够用了或者系统的响应时间已经不满足要求了。")]),a._v(" "),_("p",[a._v("负载测试说白了就是测试系统的上限。")]),a._v(" "),_("h3",{attrs:{id:"压力测试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#压力测试"}},[a._v("#")]),a._v(" 压力测试")]),a._v(" "),_("p",[a._v("不去管系统资源的使用情况，对系统继续加大请求压力，直到服务器崩溃无法再继续提供服务。")]),a._v(" "),_("h3",{attrs:{id:"稳定性测试"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#稳定性测试"}},[a._v("#")]),a._v(" 稳定性测试")]),a._v(" "),_("p",[a._v("模拟真实场景，给系统一定压力，看看业务是否能稳定运行。")]),a._v(" "),_("h3",{attrs:{id:"常见的性能优化策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见的性能优化策略"}},[a._v("#")]),a._v(" 常见的性能优化策略")]),a._v(" "),_("ol",[_("li",[a._v("系统是否需要缓存？")]),a._v(" "),_("li",[a._v("系统架构是否存在问题？")]),a._v(" "),_("li",[a._v("系统是否存在死锁？")]),a._v(" "),_("li",[a._v("系统是否存在内存泄漏？")]),a._v(" "),_("li",[a._v("数据库索引使用是否合理？")])])])}),[],!1,null,null,null);t.default=v.exports}}]);